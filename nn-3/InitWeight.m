function [thetaih1, thetah1h2, thetah2o] = InitWeight(din, dhid1, dhid2, dout)    boundih1 = sqrt(6/(din + dhid1)) % the upper bound of weight initialization between input and hidden layers    boundh1h2 = sqrt(6/(dhid1+ dhid2))    boundh2o = sqrt(6/(dhid2 + dout)) % the upper bound of weight initialization between hidden and output layers        thetaih1 = rand(din, dhid1) * 2 * boundih1 - boundih1    thetah1h2 = rand(dhid1, dhid2) * 2 * boundh1h2 - boundh1h2    thetah2o = rand(dhid2, dout) * boundh2o - boundh2o % initialize weights        thetaih1 = [zeros(1, dhid1); thetaih1]    thetah1h2 = [zeros(1, dhid2); thetah1h2]    thetah2o = [zeros(1, dout); thetah2o] % add weights for bias term, which are zerosend